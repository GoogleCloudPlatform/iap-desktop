From 8b4b7532fe303f14b7eae20bd44eab1f88081f28 Mon Sep 17 00:00:00 2001
From: IAP Desktop Build <iap-desktop+build@google.com>
Date: Tue, 25 Oct 2022 16:12:04 +1100
Subject: [PATCH 14/14] Fix Restore Cursor command

Instead of restoring the entire cursor state, only
restore the settings that the DECRC command requires
to restore. In particular, retain the visibility of
the cursor.
---
 VtNetCore.Unit.Tests/VirtualTerminal.cs       | 47 +++++++++++++++++++
 .../VirtualTerminalController.cs              | 18 ++++++-
 2 files changed, 63 insertions(+), 2 deletions(-)

diff --git a/VtNetCore.Unit.Tests/VirtualTerminal.cs b/VtNetCore.Unit.Tests/VirtualTerminal.cs
index ab52881..5781dfb 100644
--- a/VtNetCore.Unit.Tests/VirtualTerminal.cs
+++ b/VtNetCore.Unit.Tests/VirtualTerminal.cs
@@ -1,6 +1,7 @@
 using System;
 using System.Linq;
 using VtNetCore.VirtualTerminal;
+using VtNetCore.VirtualTerminal.Enums;
 using VtNetCore.VirtualTerminal.Model;
 using VtNetCore.XTermParser;
 using Xunit;
@@ -593,5 +594,51 @@ namespace VtNetCore.Unit.Tests
             Assert.Equal(red, controller.DefaultAttribute.BackgroundRgb);
             Assert.Equal(red, controller.CursorState.Attributes.BackgroundRgb);
         }
+
+        [Fact]
+        public void RestoreCursor()
+        {
+            var controller = new VirtualTerminalController(TerminalAttribute.CreateDefault());
+            controller.SetCharacterSet(ECharacterSet.French, ECharacterSetMode.IsoG0);
+            controller.SaveCursor();
+
+            // Change cursor state
+            controller.NewLine();
+            controller.NewLine();
+            controller.EnableOriginMode(true);
+            controller.SetRgbForegroundColor(0, 0, 0);
+            controller.SetCharacterSet(ECharacterSet.Dutch, ECharacterSetMode.IsoG0);
+            controller.ShowCursor(false);
+            controller.EnableBlinkingCursor(false);
+            controller.SetCursorStyle(ECursorShape.Bar, false);
+
+            controller.RestoreCursor();
+
+            Assert.Equal(0, controller.CursorState.CurrentRow);
+            Assert.Equal(0, controller.CursorState.CurrentColumn);
+            Assert.False(controller.CursorState.OriginMode);
+            Assert.Equal(ECharacterSet.French, controller.CursorState.G0);
+
+            Assert.False(controller.CursorState.ShowCursor);
+            Assert.False(controller.CursorState.BlinkingCursor);
+            Assert.Equal(ECursorShape.Bar, controller.CursorState.CursorShape);
+        }
+
+        [Fact]
+        public void RestoreCursorAppliesDefaultsWhenNoStateSaved()
+        {
+            var controller = new VirtualTerminalController(TerminalAttribute.CreateDefault());
+            controller.NewLine();
+            controller.EnableOriginMode(true);
+            controller.SetCharacterSet(ECharacterSet.French, ECharacterSetMode.IsoG0);
+
+            controller.RestoreCursor();
+
+            Assert.Equal(0, controller.CursorState.CurrentRow);
+            Assert.Equal(0, controller.CursorState.CurrentColumn);
+            Assert.False(controller.CursorState.OriginMode);
+            Assert.Equal(controller.DefaultAttribute, controller.CursorState.Attributes);
+            Assert.Equal(ECharacterSet.USASCII, controller.CursorState.G0);
+        }
     }
 }
diff --git a/VtNetCore/VirtualTerminal/VirtualTerminalController.cs b/VtNetCore/VirtualTerminal/VirtualTerminalController.cs
index d8c88da..406e340 100644
--- a/VtNetCore/VirtualTerminal/VirtualTerminalController.cs
+++ b/VtNetCore/VirtualTerminal/VirtualTerminalController.cs
@@ -1983,8 +1983,22 @@
         {
             LogController("RestoreCursor()");
 
-            if (SavedCursorState != null)
-                CursorState = SavedCursorState.Clone();
+            var restoredState = (SavedCursorState != null)
+                ? SavedCursorState.Clone()
+                : new TerminalCursorState(TerminalAttribute.CreateDefault());
+
+            // Copy back settings that need to be kept.
+            restoredState.ApplicationCursorKeysMode = CursorState.ApplicationCursorKeysMode;
+            restoredState.ReverseVideoMode = CursorState.ReverseVideoMode;
+            restoredState.InsertMode = CursorState.InsertMode;
+            restoredState.ShowCursor = CursorState.ShowCursor;
+            restoredState.BlinkingCursor = CursorState.BlinkingCursor;
+            restoredState.CursorShape = CursorState.CursorShape;
+            restoredState.ConfiguredColumns = CursorState.ConfiguredColumns;
+            restoredState.NationalCharacterReplacementMode = CursorState.NationalCharacterReplacementMode;
+            restoredState.SingleShiftSelectCharacterMode = CursorState.SingleShiftSelectCharacterMode;
+
+            this.CursorState = restoredState;
 
             LogController("     C=" + CursorState.CurrentColumn.ToString() + ",R=" + CursorState.CurrentRow.ToString());
         }
-- 
2.37.1.windows.1

