From a2bc4187ebd8b57988f4a474faffe0974e6c270d Mon Sep 17 00:00:00 2001
From: IAP Desktop Build <iap-desktop+build@google.com>
Date: Mon, 11 Jul 2022 09:56:25 +1000
Subject: [PATCH 10/10] Allow custom default attributes

Enables applications to specify a custom background,
foreground color etc. These attributes are used to
determine the null- and cursor attributes.
---
 VtNetCore.Unit.Tests/VirtualTerminal.cs       | 65 +++++++++++++++++++
 .../VirtualTerminalController.cs              | 47 +++++++++-----
 2 files changed, 94 insertions(+), 18 deletions(-)

diff --git a/VtNetCore.Unit.Tests/VirtualTerminal.cs b/VtNetCore.Unit.Tests/VirtualTerminal.cs
index 0d659e9..39daaf1 100644
--- a/VtNetCore.Unit.Tests/VirtualTerminal.cs
+++ b/VtNetCore.Unit.Tests/VirtualTerminal.cs
@@ -1,6 +1,7 @@
 using System;
 using System.Linq;
 using VtNetCore.VirtualTerminal;
+using VtNetCore.VirtualTerminal.Model;
 using VtNetCore.XTermParser;
 using Xunit;
 
@@ -500,5 +501,69 @@ namespace VtNetCore.Unit.Tests
 
             ConsumeSequence("\u001b", length);
         }
+
+        [Fact]
+        public void FullResetAppliesDefaultAttributes()
+        {
+            var attributes = TerminalAttribute.CreateDefault();
+            attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Red;
+            attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Green;
+
+            var controller = new VirtualTerminalController(attributes);
+            controller.CursorState.Attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.CursorState.Attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.FullReset();
+
+            Assert.Equal(attributes.BackgroundColor, controller.CursorState.Attributes.BackgroundColor);
+            Assert.Equal(attributes.ForegroundColor, controller.CursorState.Attributes.ForegroundColor);
+        }
+
+        [Fact]
+        public void SetCharacterAttribute0AppliesDefaultAttributes()
+        {
+            var attributes = TerminalAttribute.CreateDefault();
+            attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Red;
+            attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Green;
+
+            var controller = new VirtualTerminalController(attributes);
+            controller.CursorState.Attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.CursorState.Attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.SetCharacterAttribute(0);
+
+            Assert.Equal(attributes.BackgroundColor, controller.CursorState.Attributes.BackgroundColor);
+            Assert.Equal(attributes.ForegroundColor, controller.CursorState.Attributes.ForegroundColor);
+        }
+
+        [Fact]
+        public void SetCharacterAttribute39AppliesDefaultAttributes()
+        {
+            var attributes = TerminalAttribute.CreateDefault();
+            attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Red;
+            attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Green;
+
+            var controller = new VirtualTerminalController(attributes);
+            controller.CursorState.Attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.CursorState.Attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.SetCharacterAttribute(39);
+
+            Assert.Equal(VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black, controller.CursorState.Attributes.BackgroundColor);
+            Assert.Equal(attributes.ForegroundColor, controller.CursorState.Attributes.ForegroundColor);
+        }
+
+        [Fact]
+        public void SetCharacterAttribute49AppliesDefaultAttributes()
+        {
+            var attributes = TerminalAttribute.CreateDefault();
+            attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Red;
+            attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Green;
+
+            var controller = new VirtualTerminalController(attributes);
+            controller.CursorState.Attributes.BackgroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.CursorState.Attributes.ForegroundColor = VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black;
+            controller.SetCharacterAttribute(49);
+
+            Assert.Equal(attributes.BackgroundColor, controller.CursorState.Attributes.BackgroundColor);
+            Assert.Equal(VtNetCore.VirtualTerminal.Enums.ETerminalColor.Black, controller.CursorState.Attributes.ForegroundColor);
+        }
     }
 }
diff --git a/VtNetCore/VirtualTerminal/VirtualTerminalController.cs b/VtNetCore/VirtualTerminal/VirtualTerminalController.cs
index 75981bd..d5213ee 100644
--- a/VtNetCore/VirtualTerminal/VirtualTerminalController.cs
+++ b/VtNetCore/VirtualTerminal/VirtualTerminalController.cs
@@ -40,6 +40,11 @@
         /// </remarks>
         public int MaximumHistoryLines { get; set; } = 2001;
 
+        /// <summary>
+        /// User-defined default attributes.
+        /// </summary>
+        public TerminalAttribute DefaultAttribute { get; }
+
         /// <summary>
         /// Defines the attributes which should be assigned to null character values
         /// </summary>
@@ -48,7 +53,7 @@
         /// the value of the color. The colors set here are the colors which were applied during the
         /// last screen erase.
         /// </remarks>
-        public TerminalAttribute NullAttribute = TerminalAttribute.CreateDefault();
+        private TerminalAttribute NullAttribute;
 
         /// <summary>
         /// The current buffer
@@ -291,14 +296,20 @@
         /// <summary>
         /// Basic constructor
         /// </summary>
-        public VirtualTerminalController()
+        public VirtualTerminalController(TerminalAttribute defaults)
         {
             Buffer = normalBuffer;
             ViewPort = new VirtualTerminalViewPort(this);
-
+            DefaultAttribute = defaults;
+            NullAttribute = defaults.Clone();
             CursorState = new TerminalCursorState(NullAttribute);
         }
 
+        public VirtualTerminalController()
+            : this(TerminalAttribute.CreateDefault())
+        {
+        }
+
         /// <summary>
         /// Called to transmit data from this control.
         /// </summary>
@@ -811,7 +822,7 @@
             ActiveBuffer = EActiveBuffer.Normal;
 
             SavedCursorState = null;
-            NullAttribute = TerminalAttribute.CreateDefault();
+            NullAttribute = DefaultAttribute.Clone();
             CursorState = new TerminalCursorState(NullAttribute);
 
             ScrollTop = 0;
@@ -1763,16 +1774,16 @@
             {
                 case 0:
                     LogController("SetCharacterAttribute(reset)");
-                    CursorState.Attributes.ForegroundRgb = null;
-                    CursorState.Attributes.BackgroundRgb = null;
-                    CursorState.Attributes.ForegroundColor = ETerminalColor.White;
-                    CursorState.Attributes.BackgroundColor = ETerminalColor.Black;
-                    CursorState.Attributes.Bright = false;
-                    CursorState.Attributes.Standout = false;
-                    CursorState.Attributes.Underscore = false;
-                    CursorState.Attributes.Blink = false;
-                    CursorState.Attributes.Reverse = false;
-                    CursorState.Attributes.Hidden = false;
+                    CursorState.Attributes.ForegroundRgb = DefaultAttribute.ForegroundRgb;
+                    CursorState.Attributes.BackgroundRgb = DefaultAttribute.BackgroundRgb;
+                    CursorState.Attributes.ForegroundColor = DefaultAttribute.ForegroundColor;
+                    CursorState.Attributes.BackgroundColor = DefaultAttribute.BackgroundColor;
+                    CursorState.Attributes.Bright = DefaultAttribute.Bright;
+                    CursorState.Attributes.Standout = DefaultAttribute.Standout;
+                    CursorState.Attributes.Underscore = DefaultAttribute.Underscore;
+                    CursorState.Attributes.Blink = DefaultAttribute.Blink;
+                    CursorState.Attributes.Reverse = DefaultAttribute.Reverse;
+                    CursorState.Attributes.Hidden = DefaultAttribute.Hidden;
                     break;
 
                 case 1:
@@ -1849,8 +1860,8 @@
                     LogController("SetCharacterAttribute(foreground:" + CursorState.Attributes.ForegroundColor.ToString() + ")");
                     break;
                 case 39:
-                    CursorState.Attributes.ForegroundRgb = null;
-                    CursorState.Attributes.ForegroundColor = ETerminalColor.White;
+                    CursorState.Attributes.ForegroundRgb = DefaultAttribute.ForegroundRgb;
+                    CursorState.Attributes.ForegroundColor = DefaultAttribute.ForegroundColor;
                     LogController("SetCharacterAttribute(foreground:default)");
                     break;
                 case 40:
@@ -1867,8 +1878,8 @@
                     LogController("SetCharacterAttribute(background:" + CursorState.Attributes.BackgroundColor.ToString() + ")");
                     break;
                 case 49:
-                    CursorState.Attributes.BackgroundRgb = null;
-                    CursorState.Attributes.BackgroundColor = ETerminalColor.Black;
+                    CursorState.Attributes.BackgroundRgb = DefaultAttribute.BackgroundRgb;
+                    CursorState.Attributes.BackgroundColor = DefaultAttribute.BackgroundColor;
                     LogController("SetCharacterAttribute(background:default)");
                     break;
 
-- 
2.36.0.windows.1

