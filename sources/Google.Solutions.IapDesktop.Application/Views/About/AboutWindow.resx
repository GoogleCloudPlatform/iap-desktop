<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAcwAAAFKCAMAAACn7J9xAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFAAAA
        AQEBAgICBAQEBgYGDAwMDg4OEBAQFBQUFRUVFxcXGhoaHBwcIiIiIyMjJCQkJSUlJiYmKioqLi4uLy8v
        MjIyMzMzNTU1OTk5Ojo6Ozs7PT09Pj4+Pz8/RERERUVFRkZGS0tLTk5OUFBQUlJSVFRUVlZWV1dXWlpa
        XFxcX19fY2NjZ2dnaWlpampqbGxsbm5udHR0dXV1dnZ2eHh4enp6fHx8GFq8HWnfIXHyI3LyPIHzQoX0
        Uo/zYYfxYojxYojyYojzZInxZovxZYryaIzxaY3ya47xao7ybI/ybZDyb5LycJLycJPzcpTyc5bydJXy
        dZbydZbzd5jzeJjyeJjzeprzfJvzfZzzf57zfZz0f570gYGBhYWFhoaGh4eHjIyMkJCQkpKSlpaWmJiY
        mZmZmpqanJycnp6en5+fo6OjpaWlqKioqqqqq6ursLCwsrKytLS0tbW1t7e3uLi4ubm5u7u7vLy8vr6+
        gJ7zgJ/0gqDzgqD0hKH0hKL0hqT0gKzyiKT0iqb0iab1jKf1jaj0j6v0j6r1kav0kqz1k632lK31la71
        lq/2l7D2mLH2mLL1mbL2nLP2nbT1nbT2n7b2oLf2obj2obj3pLn3pLr2prz2qLz2qr73pcX2rMD3rsL3
        r8L4sML3scT3scP4ssT4tcf4tsj4uMn4usr4vMz4vs74vs75wcHBw8PDxsbGyMjIycnJy8vLzc3N0dHR
        19fX29vb3t7e39/fwM/4wM/5wtD5wtD6xNL5xdP6xtT5xtT6yNX5yNX6ydb5ytb6y9j6y9j7zNj6zdn7
        ztr6z9r70Nv60dz60dz709761N760uP81uD62OH72eL72+T73eT73ub73eX83+f84uLi5eXl6Ojo7Ozs
        7e3t4Of84ej74ej84ur85Or75Or85uz85+z96O386e786/H97PD87PH97vL87vL98vLy9PT09vb28fT8
        8vT99Pb99/j99vj/+Pj4+vr6+/v7+fn9+fn/+fr9+vr/+/z9/f39/Pz+/v7/rGXN1gAAAAlwSFlzAAAO
        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
        MCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJ
        hDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFM
        IIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhj
        AmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAY
        EwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTC
        mEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAmFMIIwJhDGBMCYQxgTCmEAYEwhjAok2Zb6ceXPmDTmv
        K+/19kcP0hvfZP8ZB+kt9n/oYH3H/m4OC4w5NMbMY8xDhzGHxph5jHnoMObQGDOPMQ8dxhwaY+Yx5qGy
        adP/AUpnVK9pKLcMAAAAAElFTkSuQmCC
</value>
  </data>
</root>